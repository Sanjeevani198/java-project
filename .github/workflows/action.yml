# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Sanjeevani198_java-project
    
    
    - name: Test with Maven
      run: mvn -B test --file pom.xml
      
    - name: jacoco-badge-generator
  # You may pin to the exact commit or the version.
  # uses: cicirello/jacoco-badge-generator@cae0608afbeac8e953e38a1a1ea288501ed78239
      uses: cicirello/jacoco-badge-generator@v2.5.0
      with:
    # Full path, relative to the root of the repository, to the jacoco csv file(s), including filename(s)
       jacoco-csv-file: target/site/jacoco/jacoco.csv
    # The directory for storing badges, relative to the root of the repository.
       badges-directory: .github/badges
    # The filename of the coverage badge.
       coverage-badge-filename: jacoco.svg
    
       
    # Controls whether or not to generate the coverage badge.
       generate-coverage-badge: true
    # Controls whether or not to generate the branches coverage badge.
       generate-branches-badge: false
    # Controls what happens if one or more jacoco.csv files do not exist.
       on-missing-report: fail
    # Enables failing workflow run when coverage below specified threshold.
       fail-if-coverage-less-than:  0
    # Enables failing workflow run when branches coverage below specified threshold.
       fail-if-branches-less-than: 0
    # Enables failing workflow if coverage is less than it was on previous run.
       fail-on-coverage-decrease: false
    # Enables failing workflow if branches coverage is less than it was on previous run.
       fail-on-branches-decrease: false
    # List of coverage percentages as cutoffs for each color.
       intervals: 100 90 80 70 60 0
    # List of colors to use ordered by coverage interval, best coverage to worst.
       colors: '#4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44'
       
       
       
       
    - name: Log coverage percentage
      run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"     
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
          name: jacoco-report
          path: target/site/jacoco/   
    
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
          files: target/surefire-reports/*.xml
        
